generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String // 'advisor' | 'viewer'
  createdAt DateTime @default(now())
}

model Client {
  id            Int          @id @default(autoincrement())
  name          String
  email         String       @unique
  age           Int?
  status        String // "active" | "inactive"
  familyProfile String?
  patrimony     Float        @default(0) // patrim√¥nio atual
  wallet        Wallet?
  goals         Goal[]
  events        Event[]
  insurances    Insurance[]
  simulations   Simulation[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Goal {
  id          Int      @id @default(autoincrement())
  clientId    Int
  client      Client   @relation(fields: [clientId], references: [id])
  type        String // "retirement" | "short" | "medium"
  targetValue Float
  targetDate  DateTime
  createdAt   DateTime @default(now())
}

model Wallet {
  id          Int      @id @default(autoincrement())
  clientId    Int      @unique
  client      Client   @relation(fields: [clientId], references: [id])
  total       Float
  allocations Json // [{class:'renda fixa', pct:40}, ...]
  updatedAt   DateTime @updatedAt
}

model Event {
  id        Int      @id @default(autoincrement())
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
  type      String // e.g. "contribution", "withdrawal", "insurance_payment"
  value     Float
  frequency String // "oneoff" | "monthly" | "annual"
  startDate DateTime
  createdAt DateTime @default(now())
}

model Simulation {
  id        Int      @id @default(autoincrement())
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
  name      String
  rateReal  Float
  createdAt DateTime @default(now())
  data      Json // armazenar resultado array [{year, projectedValue}]
}

model Insurance {
  id        Int      @id @default(autoincrement())
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
  type      String // "life" | "disability"
  amount    Float
  createdAt DateTime @default(now())
}
